{
  "name": "vonix-network",
  "version": "3.0.0",
  "description": "Modern Minecraft Community Platform with Real-time Features",
  "private": false,
  "author": {
    "name": "Your Name",
    "email": "your.email@example.com",
    "url": "https://github.com/yourusername"
  },
  "license": "MIT",
  "homepage": "https://github.com/yourusername/vonix-network#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/yourusername/vonix-network.git"
  },
  "bugs": {
    "url": "https://github.com/yourusername/vonix-network/issues"
  },
  "keywords": [
    "minecraft",
    "community",
    "platform",
    "nextjs",
    "typescript",
    "turso",
    "discord",
    "forum",
    "social",
    "gaming"
  ],
  "scripts": {
    "// === DEVELOPMENT ===": "",
    "dev": "next dev",
    "dev:turbo": "next dev --turbo",
    "dev:all": "concurrently \"npm run dev\" \"npm run bot\" --names \"web,bot\" --prefix-colors \"cyan,magenta\"",
    "dev:debug": "NODE_OPTIONS='--inspect' next dev",
    "// === PRODUCTION ===": "",
    "build": "next build",
    "build:analyze": "ANALYZE=true next build",
    "start": "next start",
    "start:all": "concurrently \"npm start\" \"npm run bot\" --names \"web,bot\" --prefix-colors \"cyan,magenta\"",
    "start:production": "NODE_ENV=production npm run start:all",
    "// === DISCORD BOT ===": "",
    "bot": "tsx scripts/discord-bot.ts",
    "bot:dev": "tsx watch scripts/discord-bot.ts",
    "// === CODE QUALITY ===": "",
    "lint": "next lint",
    "lint:fix": "next lint --fix",
    "format": "prettier --write \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "format:check": "prettier --check \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "type-check": "tsc --noEmit",
    "validate": "npm run type-check && npm run lint && npm run format:check",
    "// === DATABASE ===": "",
    "db:init": "tsx src/db/init.ts",
    "db:generate": "drizzle-kit generate",
    "db:generate:postgres": "drizzle-kit generate --config=drizzle.config.postgres.ts",
    "db:generate:mysql": "drizzle-kit generate --config=drizzle.config.mysql.ts",
    "db:push": "drizzle-kit push",
    "db:push:postgres": "drizzle-kit push --config=drizzle.config.postgres.ts",
    "db:push:mysql": "drizzle-kit push --config=drizzle.config.mysql.ts",
    "db:studio": "drizzle-kit studio",
    "db:migrate": "drizzle-kit migrate",
    "db:migrate:multi": "tsx src/db/migrate-multi.ts",
    "db:reset": "drizzle-kit drop && drizzle-kit push",
    "db:seed": "tsx scripts/seed.ts",
    "db:migrate-all": "npm run db:migrate-post-counts && npm run db:migrate-xp-system && npm run db:migrate-rank-expiration",
    "db:migrate-post-counts": "tsx src/db/add-post-counts.ts",
    "db:migrate-rank-expiration": "tsx src/db/add-rank-expiration.ts",
    "db:migrate-xp-system": "tsx src/db/add-xp-system.ts",
    "db:add-indexes": "tsx src/db/add-indexes.ts",
    "db:backup": "turso db dump vonix-network > backups/backup-$(date +%Y%m%d_%H%M%S).sql",
    "db:restore": "turso db shell vonix-network < backup.sql",
    "// === TESTING ===": "",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:ci": "jest --ci --coverage --maxWorkers=2",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "// === DOCKER ===": "",
    "docker:build": "docker build -t vonix-network:latest .",
    "docker:build:dev": "docker build -f Dockerfile.dev -t vonix-network:dev .",
    "docker:build:bot": "docker build -f Dockerfile.bot -t vonix-network-bot:latest .",
    "docker:run": "docker run -p 3000:3000 --env-file .env.local vonix-network:latest",
    "docker:up": "docker-compose up -d",
    "docker:up:dev": "docker-compose -f docker-compose.dev.yml up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:clean": "docker-compose down -v && docker system prune -f",
    "// === KUBERNETES ===": "",
    "k8s:deploy": "kubectl apply -f k8s/",
    "k8s:delete": "kubectl delete -f k8s/",
    "k8s:restart": "kubectl rollout restart deployment/vonix-network -n vonix-network",
    "k8s:logs": "kubectl logs -f deployment/vonix-network -n vonix-network",
    "k8s:status": "kubectl get all -n vonix-network",
    "// === SETUP & MAINTENANCE ===": "",
    "setup": "tsx scripts/setup.ts",
    "setup:production": "npm run db:migrate-all && npm run build",
    "postinstall": "npm run db:generate",
    "// === UTILITIES ===": "",
    "clean": "rimraf .next node_modules/.cache",
    "clean:all": "rimraf .next node_modules/.cache dist build .turbo",
    "clean:modules": "rimraf node_modules package-lock.json && npm install",
    "audit": "npm audit --audit-level=moderate",
    "audit:fix": "npm audit fix",
    "update": "npm update && npm outdated",
    "update:deps": "npx npm-check-updates -u && npm install",
    "// === MONITORING ===": "",
    "health": "curl -f http://localhost:3000/api/health || exit 1",
    "health:prod": "curl -f https://your-domain.com/api/health || exit 1",
    "logs": "pm2 logs vonix-network",
    "monitor": "pm2 monit",
    "// === DEPLOYMENT ===": "",
    "deploy:vercel": "vercel --prod",
    "deploy:railway": "railway up",
    "deploy:staging": "npm run build && npm run start",
    "deploy:production": "npm run validate && npm run build && npm run start:production",
    "// === GENERATORS ===": "",
    "generate:component": "tsx scripts/generators/component.ts",
    "generate:api": "tsx scripts/generators/api-route.ts",
    "generate:key": "tsx scripts/generate-api-key.ts"
  },
  "dependencies": {
    "@auth/drizzle-adapter": "^1.11.1",
    "@libsql/client": "^0.15.15",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-select": "^2.2.6",
    "@t3-oss/env-nextjs": "^0.13.0",
    "@tanstack/react-query": "^5.90.5",
    "@tanstack/react-query-devtools": "^5.90.2",
    "@types/jsonwebtoken": "^9.0.10",
    "bcryptjs": "^3.0.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "critters": "^0.0.23",
    "date-fns": "^4.1.0",
    "discord.js": "^14.24.0",
    "drizzle-orm": "^0.44.7",
    "jose": "^6.1.0",
    "jsonwebtoken": "^9.0.2",
    "lru-cache": "^11.2.2",
    "lucide-react": "^0.548.0",
    "mysql2": "^3.15.3",
    "next": "^16.0.1",
    "next-auth": "^5.0.0-beta.25",
    "next-themes": "^0.2.1",
    "nprogress": "^0.2.0",
    "pino": "^10.1.0",
    "pino-pretty": "^13.1.2",
    "postgres": "^3.4.7",
    "react": "^19.2.0",
    "react-dom": "^19.2.0",
    "react-hook-form": "^7.53.0",
    "sonner": "^2.0.7",
    "tailwind-merge": "^3.3.1",
    "tailwindcss-animate": "^1.0.7",
    "vaul": "^1.1.2",
    "ws": "^8.18.3",
    "zod": "^4.1.12",
    "zustand": "^5.0.8"
  },
  "devDependencies": {
    "@testing-library/jest-dom": "^6.9.1",
    "@testing-library/react": "^16.3.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/jest": "^30.0.0",
    "@types/node": "^20.11.17",
    "@types/nprogress": "^0.2.3",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "@types/ws": "^8.18.1",
    "autoprefixer": "^10.4.17",
    "concurrently": "^9.2.1",
    "dotenv": "^17.2.3",
    "drizzle-kit": "^0.31.5",
    "eslint": "^9",
    "eslint-config-next": "^16.0.1",
    "eslint-config-prettier": "^10.1.8",
    "node-loader": "^2.1.0",
    "postcss": "^8.4.35",
    "prettier": "^3.6.2",
    "rimraf": "^6.0.1",
    "tailwindcss": "^3.4.1",
    "tsx": "^4.20.6",
    "typescript": "^5.9.3",
    "zlib-sync": "^0.1.10"
  },
  "engines": {
    "node": ">=20.0.0"
  }
}
